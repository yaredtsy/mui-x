{
  "componentDescription": "",
  "propDescriptions": {
    "children": { "description": "The content of the component." },
    "classes": { "description": "Override or extend the styles applied to the component." },
    "ContentComponent": {
      "description": "The component used to render the content of the item.",
      "requiresRef": true
    },
    "ContentProps": { "description": "Props applied to ContentComponent." },
    "disabled": { "description": "If <code>true</code>, the item is disabled." },
    "itemId": { "description": "The id of the item." },
    "label": { "description": "The tree item label." },
    "onFocus": {
      "description": "This prop isn&#39;t supported. Use the <code>onItemFocus</code> callback on the tree if you need to monitor a item&#39;s focus."
    },
    "onKeyDown": {
      "description": "Callback fired when a key of the keyboard is pressed on the item."
    },
    "slotProps": { "description": "The props used for each component slot." },
    "slots": { "description": "Overridable component slots." },
    "sx": {
      "description": "The system prop that allows defining system overrides as well as additional CSS styles."
    }
  },
  "classDescriptions": {
    "checkbox": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the checkbox element"
    },
    "content": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the content element"
    },
    "disabled": {
      "description": "State class applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the element",
      "conditions": "disabled"
    },
    "dragAndDropOverlay": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the drag and drop overlay"
    },
    "editable": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the content of the items that are editable"
    },
    "editing": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the content element",
      "conditions": "editing is enabled"
    },
    "expanded": {
      "description": "State class applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the content element",
      "conditions": "expanded"
    },
    "focused": {
      "description": "State class applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the content element",
      "conditions": "focused"
    },
    "iconContainer": {
      "description": "Styles applied to {{nodeName}}.",
      "nodeName": "the tree item icon"
    },
    "label": { "description": "Styles applied to {{nodeName}}.", "nodeName": "the label element" },
    "labelInput": {
      "description": "Styles applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the input element that is visible",
      "conditions": "editing is enabled"
    },
    "root": { "description": "Styles applied to the root element." },
    "selected": {
      "description": "State class applied to {{nodeName}} when {{conditions}}.",
      "nodeName": "the content element",
      "conditions": "selected"
    }
  },
  "slotDescriptions": {
    "collapseIcon": "The icon used to collapse the item.",
    "endIcon": "The icon displayed next to an end item.",
    "expandIcon": "The icon used to expand the item.",
    "groupTransition": "The component that animates the appearance / disappearance of the item&#39;s children.",
    "icon": "The icon to display next to the tree item&#39;s label."
  }
}
