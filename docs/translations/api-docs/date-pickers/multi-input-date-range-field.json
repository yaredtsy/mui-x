{
  "componentDescription": "",
  "propDescriptions": {
    "components": "Overridable components.",
    "componentsProps": "The props used for each component slot.",
    "defaultValue": "The default value. Use when the component is not controlled.",
    "direction": "Defines the <code>flex-direction</code> style property. It is applied for all screen sizes.",
    "disabled": "If <code>true</code>, the component is disabled.",
    "disableFuture": "If <code>true</code>, disable values after the current date for date components, time for time components and both for date time components.",
    "disablePast": "If <code>true</code>, disable values before the current date for date components, time for time components and both for date time components.",
    "divider": "Add an element between each child.",
    "format": "Format of the date when rendered in the input(s).",
    "formatDensity": "Density of the format when rendered in the input. Setting <code>formatDensity</code> to <code>&quot;spacious&quot;</code> will add a space before and after each <code>/</code>, <code>-</code> and <code>.</code> character.",
    "maxDate": "Maximal selectable date.",
    "minDate": "Minimal selectable date.",
    "onChange": "Callback fired when the value changes.<br><br><strong>Signature:</strong><br><code>function(value: TValue, context: FieldChangeHandlerContext&lt;TError&gt;) =&gt; void</code><br><em>value:</em> The new value.<br><em>context:</em> The context containing the validation result of the current value.",
    "onError": "Callback fired when the error associated to the current value changes.<br><br><strong>Signature:</strong><br><code>function(error: TError, value: TValue) =&gt; void</code><br><em>error:</em> The new error.<br><em>value:</em> The value associated to the error.",
    "onSelectedSectionsChange": "Callback fired when the selected sections change.<br><br><strong>Signature:</strong><br><code>function(newValue: FieldSelectedSections) =&gt; void</code><br><em>newValue:</em> The new selected sections.",
    "readOnly": "It prevents the user from changing the value of the field (not from interacting with the field).",
    "selectedSections": "The currently selected sections. This prop accept four formats: 1. If a number is provided, the section at this index will be selected. 2. If an object with a <code>startIndex</code> and <code>endIndex</code> properties are provided, the sections between those two indexes will be selected. 3. If a string of type <code>FieldSectionType</code> is provided, the first section with that name will be selected. 4. If <code>null</code> is provided, no section will be selected If not provided, the selected sections will be handled internally.",
    "shouldDisableDate": "Disable specific date.<br><br><strong>Signature:</strong><br><code>function(day: TDate, position: string) =&gt; boolean</code><br><em>day:</em> The date to test.<br><em>position:</em> The date to test, &#39;start&#39; or &#39;end&#39;.<br> <em>returns</em> (boolean): Returns <code>true</code> if the date should be disabled.",
    "slotProps": "The props used for each component slot.",
    "slots": "Overridable component slots.",
    "spacing": "Defines the space between immediate children.",
    "sx": "The system prop, which allows defining system overrides as well as additional CSS styles. See the <a href=\"/system/getting-started/the-sx-prop/\">`sx` page</a> for more details.",
    "useFlexGap": "If <code>true</code>, the CSS flexbox <code>gap</code> is used instead of applying <code>margin</code> to children.<br>While CSS <code>gap</code> removes the <a href=\"https://mui.com/joy-ui/react-stack#limitations\">known limitations</a>, it is not fully supported in some browsers. We recommend checking <a href=\"https://caniuse.com/?search=flex%20gap\">https://caniuse.com/?search=flex%20gap</a> before using this flag.<br>To enable this flag globally, follow the <a href=\"https://mui.com/material-ui/customization/theme-components/#default-props\">theme&#39;s default props</a> configuration.",
    "value": "The selected value. Used when the component is controlled."
  },
  "classDescriptions": {},
  "slotDescriptions": {
    "Root": "Element rendered at the root.",
    "Separator": "Element rendered between the two inputs.",
    "TextField": "Form control with an input to render a date.\nIt is rendered twice: once for the start date and once for the end date.\nReceives the same props as <code>@mui/material/TextField</code>."
  }
}
